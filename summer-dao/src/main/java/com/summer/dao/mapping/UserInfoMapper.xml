<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.summer.dao.mapper.UserInfoMapper">
    <resultMap id="BaseResultMap" type="com.summer.dao.entity.UserInfo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="pay_password" property="payPassword" jdbcType="VARCHAR"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="real_authentic" property="realAuthentic" jdbcType="TINYINT"/>
        <result column="authentic_status" property="authenticStatus" jdbcType="TINYINT"/>
        <result column="bank_authentic" property="bankAuthentic" jdbcType="TINYINT"/>
        <result column="emergency_authentic" property="emergencyAuthentic" jdbcType="TINYINT"/>
        <result column="mobile_authentic" property="mobileAuthentic" jdbcType="TINYINT"/>
        <result column="real_authentic_time" property="realAuthenticTime" jdbcType="TIMESTAMP"/>
        <result column="real_count" property="realCount" jdbcType="TINYINT"/>
        <result column="last_real_time" property="lastRealTime" jdbcType="DATE"/>
        <result column="id_card" property="idCard" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="TINYINT"/>
        <result column="age" property="age" />
        <result column="education" property="education" jdbcType="TINYINT"/>
        <result column="marital_status" property="maritalStatus" jdbcType="TINYINT"/>
        <result column="present_address" property="presentAddress" jdbcType="VARCHAR"/>
        <result column="present_address_detail" property="presentAddressDetail" jdbcType="VARCHAR"/>
        <result column="company_name" property="companyName" jdbcType="VARCHAR"/>
        <result column="company_phone" property="companyPhone" jdbcType="VARCHAR"/>
        <result column="company_address" property="companyAddress" jdbcType="VARCHAR"/>
        <result column="company_address_detail" property="companyAddressDetail" jdbcType="VARCHAR"/>
        <result column="first_contact_name" property="firstContactName" jdbcType="VARCHAR"/>
        <result column="first_contact_phone" property="firstContactPhone" jdbcType="VARCHAR"/>
        <result column="first_contact_relation" property="firstContactRelation" jdbcType="TINYINT"/>
        <result column="second_contact_name" property="secondContactName" jdbcType="VARCHAR"/>
        <result column="second_contact_phone" property="secondContactPhone" jdbcType="VARCHAR"/>
        <result column="second_contact_relation" property="secondContactRelation" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="create_time_chg" property="createTimeChg" jdbcType="VARCHAR"/>
        <result column="create_ip" property="createIp" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="invite_user_id" property="inviteUserId" jdbcType="INTEGER"/>
        <result column="head_portrait" property="headPortrait" jdbcType="VARCHAR"/>
        <result column="idcard_img_z" property="idcardImgZ" jdbcType="VARCHAR"/>
        <result column="idcard_img_f" property="idcardImgF" jdbcType="VARCHAR"/>
        <result column="customer_type" property="customerType" jdbcType="TINYINT"/>
        <result column="amount_min" property="amountMin" jdbcType="INTEGER"/>
        <result column="amount_max" property="amountMax" jdbcType="INTEGER"/>
        <result column="amount_available" property="amountAvailable" jdbcType="INTEGER"/>
        <result column="amount_add_sum" property="amountAddSum" jdbcType="INTEGER"/>
        <result column="add_amount_time" property="addAmountTime" jdbcType="TIMESTAMP"/>
        <result column="equipment_number" property="equipmentNumber" jdbcType="VARCHAR"/>
        <result column="zm_score" property="zmScore" jdbcType="SMALLINT"/>
        <result column="zm_last_time" property="zmLastTime" jdbcType="TIMESTAMP"/>
        <result column="zm_industy_black" property="zmIndustyBlack" jdbcType="TINYINT"/>
        <result column="zm_over_num" property="zmOverNum" jdbcType="TINYINT"/>
        <result column="zm_unpay_over_num" property="zmUnpayOverNum" jdbcType="TINYINT"/>
        <result column="zm_industy_last_time" property="zmIndustyLastTime" jdbcType="TIMESTAMP"/>
        <result column="zm_status" property="zmStatus" jdbcType="TINYINT"/>
        <result column="my_hb" property="myHb" jdbcType="INTEGER"/>
        <result column="my_hb_time" property="myHbTime" jdbcType="TIMESTAMP"/>
        <result column="channel_id" property="channelId" jdbcType="INTEGER"/>
        <result column="reloan_count" property="reloanCount" jdbcType="INTEGER"/>
        <result column="province" property="province" jdbcType="VARCHAR"/>
        <result column="channel_name" property="channelName" jdbcType="VARCHAR"/>
        <result column="login_pwd_salt" property="loginPwdSalt" jdbcType="VARCHAR"/>
        <result column="pay_pwd_salt" property="payPwdSalt" jdbcType="VARCHAR"/>
        <result column="present_address_distinct" property="presentAddressDistinct" jdbcType="VARCHAR"/>
        <result column="present_latitude" property="presentLatitude" jdbcType="VARCHAR"/>
        <result column="present_longitude" property="presentLongitude" jdbcType="VARCHAR"/>
        <result column="history_over_num" property="historyOverNum" jdbcType="INTEGER"/>
        <result column="last_over_days" property="lastOverDays" jdbcType="INTEGER"/>
        <result column="client_type" property="clientType"/>
        <result column="id_card_address" property="idCardAddress"/>
        <result column="id_card_period" property="idCardPeriod"/>
        <result column="ocr_order" property="ocrOrder"/>
        <result column="black_reason" property="blackReason" jdbcType="VARCHAR"/>
        <result column="app_download_times" property="appDownloadTimes"/>
        <result column="email_address" property="emailAddress"/>
        <result column="phone_base_info" property="phoneBaseInfo"/>
        <result column="mz_status" property="mzStatus"/>
    </resultMap>
    <resultMap id="UserOrderMap" type="com.summer.dao.entity.UserInfo" extends="BaseResultMap">
        <collection property="orderBorrowList"
                    ofType="com.summer.dao.entity.OrderBorrow">
            <id column="aid" property="id" jdbcType="INTEGER"/>
            <result column="astatus" property="status" jdbcType="TINYINT"/>
            <result column="ob_create_time" property="applyTimeChg" jdbcType="VARCHAR"/>
            <result column="amount" property="applyAmount" jdbcType="INTEGER"/>
            <result column="loan_term" property="loanTerm" jdbcType="INTEGER"/>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
    id, phone, password, pay_password, real_name, real_authentic, authentic_status, bank_authentic,
    emergency_authentic, mobile_authentic, real_authentic_time, real_count, last_real_time,
    id_card, sex, age, education, marital_status, present_address, present_address_detail,
    company_name, company_phone, company_address, company_address_detail, first_contact_name,
    first_contact_phone,
    first_contact_relation,
    second_contact_name,
    second_contact_phone,
    second_contact_relation, create_time, create_ip, update_time, status, invite_user_id, 
    head_portrait, idcard_img_z, idcard_img_f, customer_type, amount_min, amount_max, 
    amount_available, amount_add_sum, add_amount_time, equipment_number, zm_score,
    zm_last_time,
    zm_industy_black, zm_over_num, zm_unpay_over_num, zm_industy_last_time, zm_status,
    my_hb, my_hb_time, channel_id,
    province,login_pwd_salt,pay_pwd_salt,present_address_distinct,present_latitude,present_longitude,history_over_num,client_type,id_card_address,id_card_period,ocr_order,app_download_times,
    email_address,phone_base_info,mz_status
  </sql>
    <sql id="Order_Column_List">
    ui.id,
    ui.real_name,
    ui.authentic_status,
    ui.phone,
    date_format(ui.create_time,'%Y-%m-%d %H:%i:%s' ) create_time_chg,
    ui.amount_available ,
    ui.status,
    ui.black_reason,
    ob.id aid,
    ob.status astatus,
    date_format(ob.create_time,'%Y-%m-%d %H:%i:%s' ) ob_create_time,
    ob.apply_amount amount,ob.loan_term,pc.channel_name,reloan.borrow_num reloan_count
  </sql>
    <sql id="Channel_Column_List">
    ui.id,
    ui.real_name,
    ui.phone,
    date_format(ui.create_time,'%Y-%m-%d %H:%i:%s') create_time_chg,
    pc.channel_name,
    ui.amount_available, ui.authentic_status, ui.bank_authentic,
    ui.emergency_authentic, ui.mobile_authentic,ui.zm_status,ui.password,ui.status,ui.login_pwd_salt,ui.pay_pwd_salt,ui.pay_password,ui.head_portrait,ui.zm_industy_black,
    ui.amount_max,ui.amount_min,ui.real_authentic,ui.present_address_distinct,ui.present_latitude,ui.present_longitude,ui.client_type,ui.id_card_address,ui.id_card_period,ui.ocr_order,ui.app_download_times,
    ui.email_address,ui.phone_base_info,ui.mz_status
  </sql>

    <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="statisticByDay" parameterType="java.lang.Integer" resultType="Long">
    select count(*)
    from user_info
    where  DATEDIFF(NOW(),create_time) = #{number,jdbcType=INTEGER}
  </select>

    <select id="selectSimple" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_info
        <where>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="idCard != null and idCard != ''">
                and id_card = #{idCard}
            </if>
        </where>
        ORDER BY id DESC
    </select>
    <select id="findOrder" parameterType="java.util.Map" resultType="com.summer.pojo.vo.BorrowUserVO">
        select
        ui.id,
        ui.real_name realName,
        ui.id_card idCard,
        ui.create_ip createIp,
        ui.authentic_status authenticStatus,
        ui.phone,
        date_format(ui.create_time,'%Y-%m-%d %H:%i:%s' ) createTimeChg,
        IFNULL(umr.max_amount,0) amountAvailable,
        ui.status,
        ui.black_reason blackReason,ui.client_type clientType,
        ob.id borrowId,
        IFNULL(ob.status,-66) borrowStatus,
        date_format(ob.create_time,'%Y-%m-%d %H:%i:%s' ) applyTimeChg,
        ob.apply_amount applyAmount,ob.loan_term loanTerm,pc.channel_name channelName,ob.out_trade_no
        outTradeNo,ob.trial_remark trialRemark,ob.loan_review_remark loanReviewRemark,
        IFNULL(umr.repetition_times,0) as reloanCount,IFNULL(imc.status,3) as increaseStatus
        from user_info ui left join (SELECT a.* FROM order_borrow AS a
        LEFT JOIN (
        SELECT MAX(id) AS id, user_id FROM order_borrow GROUP BY user_id
        ) AS b ON a.user_id = b.user_id
        WHERE a.id = b.id)as ob on ui.id = ob.user_id

        left join plateform_channel pc on ui.channel_id = pc.id

        left join user_money_rate umr on ui.id = umr.user_id

        left join increase_money_config imc on umr.repetition_times = imc.achieve_times

        inner join (SELECT ui.id ,count(ob.id) borrow_num FROM user_info ui LEFT JOIN order_borrow ob
        ON ui.id = ob.user_id GROUP BY ui.id) reloan on ui.id = reloan.id
        <where>
            <if test="sApplyTime != null and sApplyTime != ''">
                <![CDATA[    and ob.create_time >= #{sApplyTime}   ]]>
            </if>
            <if test="eApplyTime != null and eApplyTime != ''">
                <![CDATA[    and ob.create_time <  date_add(#{eApplyTime},interval 1 day) ]]>
            </if>
            <if test="astatus != null  and astatus != 41">
                and ob.status = #{astatus}
            </if>
            <if test="astatus == 41">
                and ob.status in (1,4)
            </if>
            <if test="channelId != null ">
                and pc.id = #{channelId}
            </if>
            <if test="realName != null and realName != ''">
                and ui.real_name like concat('%',#{realName},'%')
            </if>
            <if test="status != null ">
                and ui.status = #{status}
            </if>
            <if test="phone != null and phone != ''">
                and ui.phone = #{phone}
            </if>
            <if test="clientType != null">
                and ui.client_type = #{clientType}
            </if>

            <if test="authenticStatus != null ">
                and ui.authentic_status = #{authenticStatus}
            </if>
            <if test="isAuthentic == 0 ">
                and ui.authentic_status = 0
            </if>
            <if test="isAuthentic == 1 ">
                and ui.authentic_status in(1,2,3)
            </if>
            <if test="isAuthentic == 2 ">
                and ui.authentic_status =4
            </if>
            <if test="sCreateTime != null and sCreateTime != ''">
                <![CDATA[    and ui.create_time >= #{sCreateTime}   ]]>
            </if>
            <if test="eCreateTime != null and eCreateTime != ''">
                <![CDATA[    and ui.create_time < date_add(#{eCreateTime},interval 1 day) ]]>
            </if>

            <if test="reloanable == 1">
                <![CDATA[    and reloan.borrow_num >1   ]]>

            </if>
            <if test="reloanable == 0">
                <![CDATA[    and reloan.borrow_num <=1   ]]>
            </if>
        </where>
        order by ui.id desc
    </select>
    <select id="queryIos" parameterType="java.util.Map" resultType="com.summer.pojo.vo.BorrowUserVO">
        select
        ui.id,
        ui.real_name realName,
        ui.phone,
        ob.id borrowId,
        date_format(ob.loan_time,'%Y-%m-%d %H:%i:%s' ) loanTimeChg
        from user_info ui left join order_borrow ob on ui.id = ob.user_id
        left join order_renewal orn on ui.id = orn.user_id

        <where>

            <if test="clientType != null ">
                and ui.client_type = #{clientType}
            </if>
            <if test="status == 0 ">
                and ob.id is null
            </if>
            <if test="status == 1 ">
                and orn.id is null
            </if>
            <if test="status == 2 ">
                and ob.id is not null
            </if>

            <if test="sLoanTime != null and sLoanTime != ''">
                <![CDATA[    and ob.loan_time >= #{sLoanTime}   ]]>
            </if>
            <if test="eLoanTime != null and eLoanTime != ''">
                <![CDATA[    and ob.loan_time < date_add(#{eLoanTime},interval 1 day) ]]>
            </if>

        </where>
        order by ui.id desc
    </select>
    <select id="countReloan" resultType="Long">
    SELECT count(*) FROM (SELECT ui.id ,count(ob.id) borrow_num FROM user_info ui LEFT
    JOIN
    order_repayment ob
    ON ui.id = ob.user_id GROUP BY ui.id HAVING borrow_num>1) a

  </select>

    <select id="countRenew" resultType="Long">
    SELECT count(*) FROM
    order_renewal where status = 2
  </select>

    <select id="selectReloan" resultType="Long" parameterType="Integer">
    select
    count(*)
    from order_repayment
    where user_id = (select
    user_id
    from order_borrow
    where id = #{borrowId})
  </select>
    <select id="countLoan" resultType="Long">
    SELECT count(*) FROM (SELECT ui.id ,count(ob.id) borrow_num FROM user_info ui LEFT
    JOIN    order_repayment ob
    ON ui.id = ob.user_id GROUP BY ui.id HAVING borrow_num>0) a

  </select>

    <select id="countMaturityLoan" resultType="Long">
    SELECT count(*) FROM (SELECT ui.id ,count(ob.id) borrow_num FROM user_info ui LEFT
    JOIN order_repayment ob ON ui.id = ob.user_id
    WHERE <![CDATA[ date_format(ob.repayment_time, '%Y-%m-%d') <= date_format(now(), '%Y-%m-%d') ]]>
     GROUP BY ui.id HAVING borrow_num>0) a
  </select>
    <!-- <select id="countDue" resultType="Long">
       SELECT count(*) FROM (SELECT ui.id ,count(ob.id) borrow_num FROM user_info ui LEFT
       JOIN    order_repayment ob
       ON ui.id = ob.user_id GROUP BY ui.id HAVING borrow_num>0) a
     </select>-->
    <select id="loanByDay" resultType="Long" parameterType="java.util.Map">
    SELECT count(*) FROM (SELECT ui.id ,count(ob.id) borrow_num FROM user_info ui LEFT
    JOIN    order_repayment ob
    ON ui.id = ob.user_id and  DATEDIFF(#{date},ob.create_time)=1 GROUP BY ui.id HAVING borrow_num>0) a

  </select>
    <select id="countOverdue" resultType="Long">
    SELECT count(*) FROM (SELECT ui.id ,count(ob.id) borrow_num FROM user_info ui LEFT
    JOIN    order_repayment ob
    ON ui.id = ob.user_id and ob.collected=1 GROUP BY ui.id HAVING borrow_num>0) a

  </select>
  <select id="countRenewal" resultType="Long">
  	SELECT count(*) FROM (SELECT ui.id ,count(ob.id) borrow_num FROM user_info ui LEFT
    JOIN    order_renewal ob
    ON ui.id = ob.user_id and ob.status = 2 GROUP BY ui.id HAVING borrow_num>0) a
  </select>
    <select id="overdueByDay" resultType="Long" parameterType="java.util.Map">
    SELECT count(*) FROM (SELECT ui.id ,count(ob.id) borrow_num FROM user_info ui LEFT
    JOIN    order_repayment ob
    ON ui.id = ob.user_id  and  DATEDIFF(#{date},ob.repayment_time)=2 GROUP BY ui.id HAVING borrow_num>0) a

  </select>
    <select id="countTotal" resultType="Long">
    SELECT count(*) FROM user_info

  </select>
    <select id="registerByDay" resultType="Long" parameterType="java.util.Map">
    SELECT count(*) FROM user_info where  DATEDIFF(#{date},create_time)=1

  </select>
    <select id="findParams" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Channel_Column_List"/>
        from user_info ui left join plateform_channel pc on ui.channel_id = pc.id

        <where>
            <if test="channelId != null ">
                and pc.id = #{channelId}
            </if>
            <if test="realName != null and realName != ''">
                and ui.real_name like concat('%',#{realName},'%')
            </if>
            <if test="phone != null and phone != ''">
                and ui.phone = #{phone}
            </if>

            <if test="authenticStatus != null ">
                and ui.authentic_status = #{authenticStatus}
            </if>


            <if test="unauthentic == 'true'">
                and ui.authentic_status !=4
            </if>
            <if test="sCreateTime != null and sCreateTime != ''">
                <![CDATA[    and ui.create_time >= #{sCreateTime}   ]]>
            </if>
            <if test="eCreateTime != null and eCreateTime != ''">
                <![CDATA[    and ui.create_time <  date_add(#{eCreateTime},interval 1 day) ]]>
            </if>

            <if test="userStatus != null">
                and ui.status =#{userStatus}
            </if>

        </where>
        order by ui.id desc
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.summer.dao.entity.UserInfo">
    insert ignore into user_info (id, phone, password,
                           pay_password, real_name, real_authentic,
                           authentic_status, bank_authentic, emergency_authentic,
                           mobile_authentic, real_authentic_time, real_count,
                           last_real_time, id_card, sex,
                           age, education, marital_status,
                           present_address, present_address_detail, company_name,
                           company_phone, company_address, company_address_detail,
                           first_contact_name, first_contact_phone, first_contact_relation,
                           second_contact_name, second_contact_phone,
                           second_contact_relation, create_time, create_ip,
                           update_time, status, invite_user_id,
                           head_portrait, idcard_img_z, idcard_img_f,
                           customer_type, amount_min, amount_max,
                           amount_available, amount_add_sum, add_amount_time,
                           equipment_number, zm_score, zm_last_time,
                           zm_industy_black, zm_over_num, zm_unpay_over_num,
                           zm_industy_last_time, zm_status, my_hb,
                           my_hb_time, channel_id, province,client_type,id_card_address,id_card_period,ocr_order,app_download_times,
                           email_address,phone_base_info
      )
    values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
            #{payPassword,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{realAuthentic,jdbcType=TINYINT},
            #{authenticStatus,jdbcType=TINYINT}, #{bankAuthentic,jdbcType=TINYINT}, #{emergencyAuthentic,jdbcType=TINYINT},
            #{mobileAuthentic,jdbcType=TINYINT}, #{realAuthenticTime,jdbcType=TIMESTAMP}, #{realCount,jdbcType=TINYINT},
            #{lastRealTime,jdbcType=DATE}, #{idCard,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT},
            #{age}, #{education,jdbcType=TINYINT}, #{maritalStatus,jdbcType=TINYINT},
            #{presentAddress,jdbcType=VARCHAR}, #{presentAddressDetail,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR},
            #{companyPhone,jdbcType=VARCHAR}, #{companyAddress,jdbcType=VARCHAR}, #{companyAddressDetail,jdbcType=VARCHAR},
            #{firstContactName,jdbcType=VARCHAR}, #{firstContactPhone,jdbcType=VARCHAR},
            #{firstContactRelation,jdbcType=TINYINT},
            #{secondContactName,jdbcType=VARCHAR}, #{secondContactPhone,jdbcType=VARCHAR},
            #{secondContactRelation,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{createIp,jdbcType=VARCHAR},
            #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, #{inviteUserId,jdbcType=INTEGER},
            #{headPortrait,jdbcType=VARCHAR}, #{idcardImgZ,jdbcType=VARCHAR}, #{idcardImgF,jdbcType=VARCHAR},
            #{customerType,jdbcType=TINYINT}, #{amountMin,jdbcType=INTEGER}, #{amountMax,jdbcType=INTEGER},
            #{amountAvailable,jdbcType=INTEGER}, #{amountAddSum,jdbcType=INTEGER}, #{addAmountTime,jdbcType=TIMESTAMP},
            #{equipmentNumber,jdbcType=VARCHAR}, #{zmScore,jdbcType=SMALLINT}, #{zmLastTime,jdbcType=TIMESTAMP},
            #{zmIndustyBlack,jdbcType=TINYINT}, #{zmOverNum,jdbcType=TINYINT}, #{zmUnpayOverNum,jdbcType=TINYINT},
            #{zmIndustyLastTime,jdbcType=TIMESTAMP}, #{zmStatus,jdbcType=TINYINT}, #{myHb,jdbcType=INTEGER},
            #{myHbTime,jdbcType=TIMESTAMP}, #{channelId,jdbcType=INTEGER}, #{province,jdbcType=VARCHAR},#{clientType},#{idCardAddress},#{idCardPeriod},#{ocrOrder},#{appDownloadTimes},
            #{emailAddress},#{phoneBaseInfo}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.summer.dao.entity.UserInfo" useGeneratedKeys="true" keyProperty="id">
        insert ignore into user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="payPassword != null">
                pay_password,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="realAuthentic != null">
                real_authentic,
            </if>
            <if test="authenticStatus != null">
                authentic_status,
            </if>
            <if test="bankAuthentic != null">
                bank_authentic,
            </if>
            <if test="emergencyAuthentic != null">
                emergency_authentic,
            </if>
            <if test="mobileAuthentic != null">
                mobile_authentic,
            </if>
            <if test="realAuthenticTime != null">
                real_authentic_time,
            </if>
            <if test="realCount != null">
                real_count,
            </if>
            <if test="lastRealTime != null">
                last_real_time,
            </if>
            <if test="idCard != null">
                id_card,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="education != null">
                education,
            </if>
            <if test="maritalStatus != null">
                marital_status,
            </if>
            <if test="presentAddress != null">
                present_address,
            </if>
            <if test="presentAddressDetail != null">
                present_address_detail,
            </if>
            <if test="companyName != null">
                company_name,
            </if>
            <if test="companyPhone != null">
                company_phone,
            </if>
            <if test="companyAddress != null">
                company_address,
            </if>
            <if test="companyAddressDetail != null">
                company_address_detail,
            </if>
            <if test="firstContactName != null">
                first_contact_name,
            </if>
            <if test="firstContactPhone != null">
                first_contact_phone,
            </if>
            <if test="firstContactRelation != null">
                first_contact_relation,
            </if>
            <if test="secondContactName != null">
                second_contact_name,
            </if>
            <if test="secondContactPhone != null">
                second_contact_phone,
            </if>
            <if test="secondContactRelation != null">
                second_contact_relation,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createIp != null">
                create_ip,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="inviteUserId != null">
                invite_user_id,
            </if>
            <if test="headPortrait != null">
                head_portrait,
            </if>
            <if test="idcardImgZ != null">
                idcard_img_z,
            </if>
            <if test="idcardImgF != null">
                idcard_img_f,
            </if>
            <if test="customerType != null">
                customer_type,
            </if>
            <if test="amountMin != null">
                amount_min,
            </if>
            <if test="amountMax != null">
                amount_max,
            </if>
            <if test="amountAvailable != null">
                amount_available,
            </if>
            <if test="amountAddSum != null">
                amount_add_sum,
            </if>
            <if test="addAmountTime != null">
                add_amount_time,
            </if>
            <if test="equipmentNumber != null">
                equipment_number,
            </if>
            <if test="zmScore != null">
                zm_score,
            </if>
            <if test="zmLastTime != null">
                zm_last_time,
            </if>
            <if test="zmIndustyBlack != null">
                zm_industy_black,
            </if>
            <if test="zmOverNum != null">
                zm_over_num,
            </if>
            <if test="zmUnpayOverNum != null">
                zm_unpay_over_num,
            </if>
            <if test="zmIndustyLastTime != null">
                zm_industy_last_time,
            </if>
            <if test="zmStatus != null">
                zm_status,
            </if>
            <if test="myHb != null">
                my_hb,
            </if>
            <if test="myHbTime != null">
                my_hb_time,
            </if>
            <if test="channelId != null">
                channel_id,
            </if>
            <if test="province != null">
                province,
            </if>
            <if test="loginPwdSalt != null">
                login_pwd_salt,
            </if>
            <if test="payPwdSalt != null">
                pay_pwd_salt,
            </if>
            <if test="presentAddressDistinct != null ">
                present_address_distinct,
            </if>

            <if test="presentLatitude != null ">
                present_latitude,
            </if>
            <if test="presentLongitude">
                present_longitude,
            </if>
            <if test="clientType != null">
                client_type,
            </if>
            <if test="appDownloadTimes != null">
                app_download_times,
            </if>
            <if test="emailAddress != null">
                email_address,
            </if>
            <if test="phoneBaseInfo != null">
                phone_base_info,
            </if>
            <if test="mzStatus != null">
                mz_status
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="payPassword != null">
                #{payPassword,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="realAuthentic != null">
                #{realAuthentic,jdbcType=TINYINT},
            </if>
            <if test="authenticStatus != null">
                #{authenticStatus,jdbcType=TINYINT},
            </if>
            <if test="bankAuthentic != null">
                #{bankAuthentic,jdbcType=TINYINT},
            </if>
            <if test="emergencyAuthentic != null">
                #{emergencyAuthentic,jdbcType=TINYINT},
            </if>
            <if test="mobileAuthentic != null">
                #{mobileAuthentic,jdbcType=TINYINT},
            </if>
            <if test="realAuthenticTime != null">
                #{realAuthenticTime,jdbcType=TIMESTAMP},
            </if>
            <if test="realCount != null">
                #{realCount,jdbcType=TINYINT},
            </if>
            <if test="lastRealTime != null">
                #{lastRealTime,jdbcType=DATE},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=TINYINT},
            </if>
            <if test="age != null">
                #{age},
            </if>
            <if test="education != null">
                #{education,jdbcType=TINYINT},
            </if>
            <if test="maritalStatus != null">
                #{maritalStatus,jdbcType=TINYINT},
            </if>
            <if test="presentAddress != null">
                #{presentAddress,jdbcType=VARCHAR},
            </if>
            <if test="presentAddressDetail != null">
                #{presentAddressDetail,jdbcType=VARCHAR},
            </if>
            <if test="companyName != null">
                #{companyName,jdbcType=VARCHAR},
            </if>
            <if test="companyPhone != null">
                #{companyPhone,jdbcType=VARCHAR},
            </if>
            <if test="companyAddress != null">
                #{companyAddress,jdbcType=VARCHAR},
            </if>
            <if test="companyAddressDetail != null">
                #{companyAddressDetail,jdbcType=VARCHAR},
            </if>
            <if test="firstContactName != null">
                #{firstContactName,jdbcType=VARCHAR},
            </if>
            <if test="firstContactPhone != null">
                #{firstContactPhone,jdbcType=VARCHAR},
            </if>
            <if test="firstContactRelation != null">
                #{firstContactRelation,jdbcType=TINYINT},
            </if>
            <if test="secondContactName != null">
                #{secondContactName,jdbcType=VARCHAR},
            </if>
            <if test="secondContactPhone != null">
                #{secondContactPhone,jdbcType=VARCHAR},
            </if>
            <if test="secondContactRelation != null">
                #{secondContactRelation,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createIp != null">
                #{createIp,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="inviteUserId != null">
                #{inviteUserId,jdbcType=INTEGER},
            </if>
            <if test="headPortrait != null">
                #{headPortrait,jdbcType=VARCHAR},
            </if>
            <if test="idcardImgZ != null">
                #{idcardImgZ,jdbcType=VARCHAR},
            </if>
            <if test="idcardImgF != null">
                #{idcardImgF,jdbcType=VARCHAR},
            </if>
            <if test="customerType != null">
                #{customerType,jdbcType=TINYINT},
            </if>
            <if test="amountMin != null">
                #{amountMin,jdbcType=INTEGER},
            </if>
            <if test="amountMax != null">
                #{amountMax,jdbcType=INTEGER},
            </if>
            <if test="amountAvailable != null">
                #{amountAvailable,jdbcType=INTEGER},
            </if>
            <if test="amountAddSum != null">
                #{amountAddSum,jdbcType=INTEGER},
            </if>
            <if test="addAmountTime != null">
                #{addAmountTime,jdbcType=TIMESTAMP},
            </if>
            <if test="equipmentNumber != null">
                #{equipmentNumber,jdbcType=VARCHAR},
            </if>
            <if test="zmScore != null">
                #{zmScore,jdbcType=SMALLINT},
            </if>
            <if test="zmLastTime != null">
                #{zmLastTime,jdbcType=TIMESTAMP},
            </if>
            <if test="zmIndustyBlack != null">
                #{zmIndustyBlack,jdbcType=TINYINT},
            </if>
            <if test="zmOverNum != null">
                #{zmOverNum,jdbcType=TINYINT},
            </if>
            <if test="zmUnpayOverNum != null">
                #{zmUnpayOverNum,jdbcType=TINYINT},
            </if>
            <if test="zmIndustyLastTime != null">
                #{zmIndustyLastTime,jdbcType=TIMESTAMP},
            </if>
            <if test="zmStatus != null">
                #{zmStatus,jdbcType=TINYINT},
            </if>
            <if test="myHb != null">
                #{myHb,jdbcType=INTEGER},
            </if>
            <if test="myHbTime != null">
                #{myHbTime,jdbcType=TIMESTAMP},
            </if>
            <if test="channelId != null">
                #{channelId,jdbcType=INTEGER},
            </if>
            <if test="province != null">
                #{province,jdbcType=VARCHAR},
            </if>

            <if test="loginPwdSalt != null">
                #{loginPwdSalt,jdbcType=VARCHAR},
            </if>
            <if test="payPwdSalt != null">
                #{payPwdSalt,jdbcType=VARCHAR},
            </if>

            <if test="presentAddressDistinct != null ">
                #{presentAddressDistinct},
            </if>

            <if test="presentLatitude != null ">
                #{presentLatitude},
            </if>
            <if test="presentLongitude">
                #{presentLongitude},
            </if>
            <if test="clientType != null">
                #{clientType},
            </if>
            <if test="appDownloadTimes != null">
                #{appDownloadTimes},
            </if>
            <if test="emailAddress != null">
                #{emailAddress},
            </if>
            <if test="phoneBaseInfo != null">
                #{phoneBaseInfo},
            </if>
            <if test="mzStatus != null">
                #{mzStatus}
            </if>
        </trim>
    </insert>
    
    <update id="updateByPrimaryKeySelective" parameterType="com.summer.dao.entity.UserInfo">
        update user_info
        <set>

            <if test="phone != null and phone != ''" >
                phone=#{phone,jdbcType=VARCHAR},
            </if>
            <if test="password != null and password != ''">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="payPassword != null">
                pay_password = #{payPassword,jdbcType=VARCHAR},
            </if>
            <if test="realName != null and realName != ''">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="realAuthentic != null">
                real_authentic = #{realAuthentic,jdbcType=TINYINT},
            </if>
            <if test="authenticStatus != null">
                authentic_status = #{authenticStatus,jdbcType=TINYINT},
            </if>
            <if test="bankAuthentic != null">
                bank_authentic = #{bankAuthentic,jdbcType=TINYINT},
            </if>
            <if test="emergencyAuthentic != null">
                emergency_authentic = #{emergencyAuthentic,jdbcType=TINYINT},
            </if>
            <if test="mobileAuthentic != null">
                mobile_authentic = #{mobileAuthentic,jdbcType=TINYINT},
            </if>
            <if test="realAuthenticTime != null">
                real_authentic_time = #{realAuthenticTime,jdbcType=TIMESTAMP},
            </if>
            <if test="realCount != null">
                real_count = #{realCount,jdbcType=TINYINT},
            </if>
            <if test="lastRealTime != null">
                last_real_time = #{lastRealTime,jdbcType=DATE},
            </if>
            <if test="idCard != null">
                id_card = #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=TINYINT},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="education != null">
                education = #{education,jdbcType=TINYINT},
            </if>
            <if test="maritalStatus != null">
                marital_status = #{maritalStatus,jdbcType=TINYINT},
            </if>
            <if test="presentAddress != null">
                present_address = #{presentAddress,jdbcType=VARCHAR},
            </if>
            <if test="presentAddressDetail != null">
                present_address_detail = #{presentAddressDetail,jdbcType=VARCHAR},
            </if>
            <if test="companyName != null">
                company_name = #{companyName,jdbcType=VARCHAR},
            </if>
            <if test="companyPhone != null">
                company_phone = #{companyPhone,jdbcType=VARCHAR},
            </if>
            <if test="companyAddress != null">
                company_address = #{companyAddress,jdbcType=VARCHAR},
            </if>
            <if test="companyAddressDetail != null">
                company_address_detail = #{companyAddressDetail,jdbcType=VARCHAR},
            </if>
            <if test="firstContactName != null">
                first_contact_name = #{firstContactName,jdbcType=VARCHAR},
            </if>
            <if test="firstContactPhone != null">
                first_contact_phone = #{firstContactPhone,jdbcType=VARCHAR},
            </if>
            <if test="firstContactRelation != null">
                first_contact_relation = #{firstContactRelation,jdbcType=TINYINT},
            </if>
            <if test="secondContactName != null">
                second_contact_name = #{secondContactName,jdbcType=VARCHAR},
            </if>
            <if test="secondContactPhone != null">
                second_contact_phone = #{secondContactPhone,jdbcType=VARCHAR},
            </if>
            <if test="secondContactRelation != null">
                second_contact_relation = #{secondContactRelation,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createIp != null">
                create_ip = #{createIp,jdbcType=VARCHAR},
            </if>
            update_time = now(),
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="inviteUserId != null">
                invite_user_id = #{inviteUserId,jdbcType=INTEGER},
            </if>
            <if test="headPortrait != null">
                head_portrait = #{headPortrait,jdbcType=VARCHAR},
            </if>
            <if test="idcardImgZ != null">
                idcard_img_z = #{idcardImgZ,jdbcType=VARCHAR},
            </if>
            <if test="idcardImgF != null">
                idcard_img_f = #{idcardImgF,jdbcType=VARCHAR},
            </if>
            <if test="customerType != null">
                customer_type = #{customerType,jdbcType=TINYINT},
            </if>
            <if test="amountMin != null">
                amount_min = #{amountMin,jdbcType=INTEGER},
            </if>
            <if test="amountMax != null">
                amount_max = #{amountMax,jdbcType=INTEGER},
            </if>
            <if test="amountAvailable != null">
                amount_available = #{amountAvailable,jdbcType=INTEGER},
            </if>
            <if test="amountAddSum != null">
                amount_add_sum = #{amountAddSum,jdbcType=INTEGER},
            </if>
            <if test="addAmountTime != null">
                add_amount_time = #{addAmountTime,jdbcType=TIMESTAMP},
            </if>
            <if test="equipmentNumber != null">
                equipment_number = #{equipmentNumber,jdbcType=VARCHAR},
            </if>
            <if test="zmScore != null">
                zm_score = #{zmScore,jdbcType=SMALLINT},
            </if>
            <if test="zmLastTime != null">
                zm_last_time = #{zmLastTime,jdbcType=TIMESTAMP},
            </if>
            <if test="zmIndustyBlack != null">
                zm_industy_black = #{zmIndustyBlack,jdbcType=TINYINT},
            </if>
            <if test="zmOverNum != null">
                zm_over_num = #{zmOverNum,jdbcType=TINYINT},
            </if>
            <if test="zmUnpayOverNum != null">
                zm_unpay_over_num = #{zmUnpayOverNum,jdbcType=TINYINT},
            </if>
            <if test="zmIndustyLastTime != null">
                zm_industy_last_time = #{zmIndustyLastTime,jdbcType=TIMESTAMP},
            </if>
            <if test="zmStatus != null">
                zm_status = #{zmStatus,jdbcType=TINYINT},
            </if>
            <if test="myHb != null">
                my_hb = #{myHb,jdbcType=INTEGER},
            </if>
            <if test="myHbTime != null">
                my_hb_time = #{myHbTime,jdbcType=TIMESTAMP},
            </if>
            <if test="channelId != null">
                channel_id = #{channelId,jdbcType=INTEGER},
            </if>
            <if test="province != null">
                province = #{province,jdbcType=VARCHAR},
            </if>

            <if test="loginPwdSalt != null">
                login_pwd_salt=#{loginPwdSalt,jdbcType=VARCHAR},
            </if>

            <if test="payPwdSalt != null ">
                pay_pwd_salt=#{payPwdSalt,jdbcType=VARCHAR},
            </if>

            <if test="presentAddressDistinct != null ">
                present_address_distinct=#{presentAddressDistinct,jdbcType=VARCHAR},
            </if>

            <if test="presentLatitude != null ">
                present_latitude=#{presentLatitude,jdbcType=VARCHAR},
            </if>
            <if test="presentLongitude != null">
                present_longitude= #{presentLongitude,jdbcType=VARCHAR},
            </if>
            <if test="clientType != null">
                client_type=#{clientType,jdbcType=INTEGER},
            </if>
            <if test="idCardAddress != null">
                id_card_address=#{idCardAddress,jdbcType=VARCHAR},
            </if>
            <if test="idCardPeriod != null">
                id_card_period=#{idCardPeriod,jdbcType=VARCHAR},
            </if>
            <if test="ocrOrder != null">
                ocr_order=#{ocrOrder,jdbcType=VARCHAR},
            </if>
            <if test="historyOverNum != null">
                history_over_num=#{historyOverNum,jdbcType=INTEGER},
            </if>
            <if test="lastOverDays != null">
                last_over_days=#{lastOverDays,jdbcType=INTEGER},
            </if>
            <if test="appDownloadTimes != null">
                app_download_times= #{appDownloadTimes,jdbcType=INTEGER},
            </if>
            <if test="emailAddress != null">
                email_address = #{emailAddress,jdbcType=VARCHAR},
            </if>
            <if test="phoneBaseInfo != null">
                phone_base_info = #{phoneBaseInfo,jdbcType=VARCHAR},
            </if>
            <if test="mzStatus != null">
                mz_status = #{mzStatus,jdbcType=INTEGER}
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    <update id="updateByPrimaryKey" parameterType="com.summer.dao.entity.UserInfo">
    update user_info
    set phone = #{phone,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        pay_password = #{payPassword,jdbcType=VARCHAR},
        real_name = #{realName,jdbcType=VARCHAR},
        real_authentic = #{realAuthentic,jdbcType=TINYINT},
        authentic_status = #{authenticStatus,jdbcType=TINYINT},
        bank_authentic = #{bankAuthentic,jdbcType=TINYINT},
        emergency_authentic = #{emergencyAuthentic,jdbcType=TINYINT},
        mobile_authentic = #{mobileAuthentic,jdbcType=TINYINT},
        real_authentic_time = #{realAuthenticTime,jdbcType=TIMESTAMP},
        real_count = #{realCount,jdbcType=TINYINT},
        last_real_time = #{lastRealTime,jdbcType=DATE},
        id_card = #{idCard,jdbcType=VARCHAR},
        sex = #{sex,jdbcType=TINYINT},
        age = #{age},
        education = #{education,jdbcType=TINYINT},
        marital_status = #{maritalStatus,jdbcType=TINYINT},
        present_address         = #{presentAddress,jdbcType=VARCHAR},
        present_address_detail  = #{presentAddressDetail,jdbcType=VARCHAR},
        company_name            = #{companyName,jdbcType=VARCHAR},
        company_phone           = #{companyPhone,jdbcType=VARCHAR},
        company_address         = #{companyAddress,jdbcType=VARCHAR},
        company_address_detail  = #{companyAddressDetail,jdbcType=VARCHAR},
        first_contact_name      = #{firstContactName,jdbcType=VARCHAR},
        first_contact_phone     = #{firstContactPhone,jdbcType=VARCHAR},
        first_contact_relation  = #{firstContactRelation,jdbcType=TINYINT},
        second_contact_name     = #{secondContactName,jdbcType=VARCHAR},
        second_contact_phone    = #{secondContactPhone,jdbcType=VARCHAR},
        second_contact_relation = #{secondContactRelation,jdbcType=TINYINT},
        create_time             = #{createTime,jdbcType=TIMESTAMP},
        create_ip               = #{createIp,jdbcType=VARCHAR},
        update_time             = #{updateTime,jdbcType=TIMESTAMP},
        status                  = #{status,jdbcType=TINYINT},
        invite_user_id          = #{inviteUserId,jdbcType=INTEGER},
        head_portrait           = #{headPortrait,jdbcType=VARCHAR},
        idcard_img_z = #{idcardImgZ,jdbcType=VARCHAR},
        idcard_img_f = #{idcardImgF,jdbcType=VARCHAR},
        customer_type = #{customerType,jdbcType=TINYINT},
        amount_min = #{amountMin,jdbcType=INTEGER},
        amount_max = #{amountMax,jdbcType=INTEGER},
        amount_available = #{amountAvailable,jdbcType=INTEGER},
        amount_add_sum = #{amountAddSum,jdbcType=INTEGER},
        add_amount_time = #{addAmountTime,jdbcType=TIMESTAMP},
        equipment_number = #{equipmentNumber,jdbcType=VARCHAR},
        zm_score = #{zmScore,jdbcType=SMALLINT},
        zm_last_time = #{zmLastTime,jdbcType=TIMESTAMP},
        zm_industy_black = #{zmIndustyBlack,jdbcType=TINYINT},
        zm_over_num = #{zmOverNum,jdbcType=TINYINT},
        zm_unpay_over_num = #{zmUnpayOverNum,jdbcType=TINYINT},
        zm_industy_last_time = #{zmIndustyLastTime,jdbcType=TIMESTAMP},
        zm_status = #{zmStatus,jdbcType=TINYINT},
        my_hb = #{myHb,jdbcType=INTEGER},
        my_hb_time = #{myHbTime,jdbcType=TIMESTAMP},
        channel_id = #{channelId,jdbcType=INTEGER},
        province = #{province,jdbcType=VARCHAR},
        client_type = #{clientType},
        id_card_address=#{idCardAddress},
        id_card_period=#{idCardPeriod},
        ocr_order=#{ocrOrder},
        app_download_times= #{appDownloadTimes},
        email_address = #{emailAddress},
        phone_base_info = #{phoneBaseInfo},
        mz_status = #{mzStatus}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateAuthenticStatus" parameterType="com.summer.dao.entity.UserInfo">
    update user_info
    set       authentic_status = #{authenticStatus,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER} and authentic_status !=4
  </update>

    <update id="addBlackUser">
        <if test="ids != null and ids.size > 0">
            update user_info
            set status = 1
            <if test="blackReason != null">
                ,black_reason = #{blackReason}
            </if>
            where id in
            <foreach item="item" index="index" collection="ids"
                     open="(" separator="," close=")">
                ${item}
            </foreach>
        </if>
    </update>

    <update id="deleteBlackUser" parameterType="java.lang.Integer">
    update user_info
    set status = 0
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="findByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_info where phone = #{phone}
    </select>

    <select id="selectByMzStatus" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_info where mz_status=0 and status =0 and real_authentic = 1 limit 5
    </select>

    <select id="findOrderNew" parameterType="java.util.Map" resultType="com.summer.pojo.vo.BorrowUserVO">
        select
        ui.id, ui.real_name realName, ui.authentic_status authenticStatus, ui.phone, ui.id_card idCard, ui.customer_type
        customerType, ob.status auditStatus,
        ifnull(ui.history_over_num, 0) overdueCount, date_format(ui.create_time,'%Y-%m-%d %H:%i:%s' ) createTimeChg,
        IFNULL(umr.max_amount,0) amountAvailable,
        ui.status, ui.black_reason blackReason,ui.client_type clientType, ob.id borrowId, IFNULL(ob.status,-2)
        borrowStatus,
        date_format(ob.create_time,'%Y-%m-%d %H:%i:%s' ) applyTimeChg, ui.create_ip createIp,
        ob.apply_amount applyAmount,ob.loan_term loanTerm,pc.channel_name channelName,ob.out_trade_no
        outTradeNo,ob.trial_remark trialRemark,ob.loan_review_remark loanReviewRemark,
        IFNULL(umr.repetition_times,0) as reloanCount,IFNULL(imc.status,3) as increaseStatus
        from user_info ui left join (SELECT a.id,a.user_id,
        a.status,a.create_time,a.apply_amount,a.loan_term,a.out_trade_no,a.trial_remark,
        a.loan_review_remark,a.credit_level FROM order_borrow AS a
        where a.id in (SELECT id from(
        SELECT MAX(id) AS id, user_id FROM order_borrow GROUP BY user_id
        ) b) ) ob on ui.id = ob.user_id
        left join plateform_channel pc on ui.channel_id = pc.id
        left join user_money_rate umr on ui.id = umr.user_id
        left join increase_money_config imc on umr.repetition_times = imc.achieve_times

        <where>
            <if test="channelId != null ">
                and pc.id = #{channelId}
            </if>
            <if test="realName != null and realName != ''">
                and ui.real_name like concat('%',#{realName},'%')
            </if>
            <if test="ustatus != null ">
                and ui.status = #{ustatus}
            </if>
            <if test="phone != null and phone != ''">
                and ui.phone = #{phone}
            </if>
            <if test="clientType != null">
                and ui.client_type = #{clientType}
            </if>
            <if test="authenticStatus != null ">
                and ui.authentic_status = #{authenticStatus}
            </if>
            <if test="isAuthentic == 0 ">
                and ui.authentic_status = 0
            </if>
            <if test="isAuthentic == 1 ">
                and ui.authentic_status in(1,2,3)
            </if>
            <if test="isAuthentic == 2 ">
                and ui.authentic_status =4
            </if>
            <if test="sCreateTime != null and sCreateTime != ''">
                <![CDATA[    and ui.create_time >= #{sCreateTime}   ]]>
            </if>
            <if test="eCreateTime != null and eCreateTime != ''">
                <![CDATA[    and ui.create_time < date_add(#{eCreateTime},interval 1 day) ]]>
            </if>
            <if test="reloanable == 1">
                <![CDATA[    and  IFNULL(umr.repetition_times,0) >0   ]]>
            </if>
            <if test="reloanable == 0">
                <![CDATA[    and  IFNULL(umr.repetition_times,0) <=0   ]]>
            </if>
            <if test="customerType != null ">
                and ui.customer_type = #{customerType}
            </if>
            <if test="astatus != null  and astatus != 41 and astatus != 62 and astatus != 61  and astatus != 20 and astatus != 80">
                and ob.status = #{astatus}
            </if>
            <if test="pass == 'true'">
                and ob.status in (-1,6,7,8,9,10,11,12,13)
            </if>
            <if test="astatus == 41">
                and ob.status in (1,4)
            </if>
            <if test="astatus == 20">
                and ob.status in (0,2)
            </if>
            <if test="astatus == 62">
                and ob.credit_level =2
            </if>
            <if test="astatus == 61">
                and ob.credit_level =1
            </if>
            <if test="astatus == 80">
                <![CDATA[   and ob.status >7  ]]>
            </if>
            <if test="denied == 'true'">
                and ob.status in (1,3)
            </if>
        </where>
        order by ui.id desc
    </select>
    <update id="updateSelectiveByApi" parameterType="com.alibaba.fastjson.JSONObject">
        update user_info
        <set>
            <if test="user_name != null">
                real_name =#{user_name},
            </if>
            <if test="id_card != null">
                id_card =#{id_card},
            </if>
            <if test="sex !=null">
                sex=#{sex},
            </if>
            <if test="authenticStatus != null">
                authentic_status=#{authenticStatus},
            </if>
            <if test="real_authentic != null">
                real_authentic=#{real_authentic},
            </if>
            <if test="realCount != null">
                real_count = #{realCount},
            </if>
            <if test="realAuthenticTime != null">
                real_authentic_time =#{realAuthenticTime},
            </if>
            <if test="age != null">
                age=#{age},
            </if>
            <if test="validity_period != null">
                id_card_period =#{validity_period},
            </if>
            <if test="id_card_address != null">
                id_card_address =#{id_card_address},
            </if>
            <if test="id_positive != null">
                idcard_img_f=#{id_positive},
            </if>
            <if test="id_negative != null">
                idcard_img_z=#{id_negative},
            </if>
            <if test="face != null">
                head_portrait=#{face},
            </if>
            <if test="ydh_order_no != null">
                ocr_order=#{ydh_order_no},
            </if>
            <if test="loan_amount != null">
                amount_max=#{loan_amount},
            </if>
            <if test="person_info != null">
                person_info=#{person_info},
            </if>
            <if test="email != null">
                email_address=#{email},
            </if>
            <if test="living_address != null">
                present_address_distinct=#{living_address},
            </if>
            <if test="company_address != null">
                company_address_detail=#{company_address},
            </if>
            <if test="company_name != null">
                company_name=#{company_name},
            </if>
            <if test="company_phone != null">
                company_phone=#{company_phone},
            </if>
            <if test="name != null">
                first_contact_name=#{name},
            </if>
            <if test="mobile != null">
                first_contact_phone=#{mobile},
            </if>
            <if test="name_spare != null">
                second_contact_name=#{name_spare},
            </if>
            <if test="mobile_spare != null">
                second_contact_phone=#{mobile_spare},
            </if>
            <if test="latitude != null">
                present_latitude=#{latitude},
            </if>
            <if test="longitude != null">
                present_longitude=#{longitude},
            </if>
            <if test="emergency_authentic != null ">
                emergency_authentic=#{emergency_authentic},
            </if>
            <if test="mobile_authentic != null">
                mobile_authentic=#{mobile_authentic},
            </if>
            <if test="client_type == null">
                client_type=0
            </if>

        </set>
        where phone = #{phone}
    </update>

    <select id="selectByIdCard" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user_info
        where id_card = #{idCard} order by id asc
    </select>
    <select id="selectChannelById" resultType="java.lang.String" parameterType="java.lang.Integer">
       SELECT ci.risk_type riskType from  user_info ui  left join
                                    plateform_channel ci on ci.id=ui.channel_id where ui.id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByYdhOrderNo" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_info where ocr_order =#{ydhOrderNo}
    </select>
    <select id="findByChannelId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select id from user_info where channel_id =#{channelId}
  </select>

    <select id="selectNumByTime" parameterType="java.util.Map" resultType="java.lang.Integer">
        select COUNT(1) from user_info
        <where>
            <if test="beginTime != null and beginTime != ''">
                <![CDATA[ and create_time >= #{beginTime} ]]>
            </if>
            <if test="endTime != null and endTime != ''">
                <![CDATA[ and create_time < #{endTime} ]]>
            </if>
        </where>
    </select>

    <select id="findPwdById" parameterType="java.lang.Integer" resultType="com.summer.dao.entity.UserInfo" >
        select equipment_number as equipmentNumber from user_info where id=#{id}
    </select>

    <select id="findUpdateUser" parameterType="java.util.Map" resultType="com.summer.dao.entity.UserUpdate">
        select
        id as id,
        phone as phone,
        real_name as realName
        from user_info
        <where>
            phone !=0 and phone not like '%=%'
            <if test="idFirst != null and idSecond !=null ">
                <![CDATA[ id >=#{idFirst} and id <= #{idSecond} ]]>
            </if>
             <if test="id != null">
                 and id=#{id}
             </if>

        </where>

    </select>
    
    
    <update id="updateUserDeviceModelAndSystemVersion" parameterType="com.summer.dao.entity.UserInfo">
    update user_info
        <set>
            <if test="deviceModel != null">
                device_Model =#{deviceModel},
            </if>
            <if test="systemVersion != null">
                system_Version =#{systemVersion},
            </if>
            <if test="appVersion != null">
                app_Version =#{appVersion}
            </if>
        </set>
        where id = #{id}
  </update>
  
  <insert id="insertLinkFaceCompareresult" parameterType="com.summer.dao.entity.LinkfaceCompareResults">
  	insert into linkface_compareresults(id_card,compare_results,compare_status,create_time) VALUES(#{idCard},#{compareResults},#{compareStatus},NOW())
  </insert>
  
  <select id="selectUserLinkFaceCount" resultType="java.lang.Integer" parameterType="java.lang.String">
  	select count(*) as s FROM linkface_compareresults where id_card = #{idCard} and compare_status = '0'
  </select>
</mapper>