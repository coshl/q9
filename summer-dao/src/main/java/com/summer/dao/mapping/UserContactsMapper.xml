<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.summer.dao.mapper.UserContactsDAO">
    <resultMap id="BaseResultMap" type="com.summer.dao.entity.UserContacts">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="contact_name" jdbcType="VARCHAR" property="contactName"/>
        <result column="contact_phone" jdbcType="VARCHAR" property="contactPhone"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, user_name, contact_name, contact_phone, create_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_contacts
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_contacts
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.summer.dao.entity.UserContacts">
    insert into user_contacts (id, user_id, user_name, 
      contact_name, contact_phone, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{contactName,jdbcType=VARCHAR}, #{contactPhone,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.summer.dao.entity.UserContacts">
        insert into user_contacts
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="contactName != null">
                contact_name,
            </if>
            <if test="contactPhone != null">
                contact_phone,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="contactName != null">
                #{contactName,jdbcType=VARCHAR},
            </if>
            <if test="contactPhone != null">
                #{contactPhone,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <insert id="insertBatch" parameterType="java.util.List">
        insert into user_contacts (id, user_id, user_name,
        contact_name, contact_phone, create_time
        )
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (#{item.id,jdbcType=INTEGER}, #{item.userId,jdbcType=INTEGER}, #{item.userName,jdbcType=VARCHAR},
            #{item.contactName,jdbcType=VARCHAR}, #{item.contactPhone,jdbcType=VARCHAR},
            #{item.createTime,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>
    <insert id="insertBatchSelective" parameterType="java.util.List">
        insert ignore into user_contacts
        (id, user_id, user_name, contact_name, contact_phone, create_time)
        values
        <foreach collection="list" index="index" item="item" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="item.id != null">
                    #{item.id,jdbcType=INTEGER},
                </if>
                <if test="item.id == null">
                    NULL,
                </if>
                <if test="item.userId != null">
                    #{item.userId,jdbcType=INTEGER},
                </if>
                <if test="item.userId == null">
                    NULL,
                </if>
                <if test="item.userName != null">
                    #{item.userName,jdbcType=VARCHAR},
                </if>
                <if test="item.userName == null">
                    NULL,
                </if>
                <if test="item.contactName != null">
                    #{item.contactName,jdbcType=VARCHAR},
                </if>
                <if test="item.contactName == null">
                    NULL,
                </if>
                <if test="item.contactPhone != null">
                    #{item.contactPhone,jdbcType=VARCHAR},
                </if>
                <if test="item.contactPhone == null">
                    NULL,
                </if>
                <if test="item.createTime != null">
                    #{item.createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="item.createTime == null">
                    NULL,
                </if>
            </trim>
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.summer.dao.entity.UserContacts">
        update user_contacts
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="contactName != null">
                contact_name = #{contactName,jdbcType=VARCHAR},
            </if>
            <if test="contactPhone != null">
                contact_phone = #{contactPhone,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.summer.dao.entity.UserContacts">
    update user_contacts
    set user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      contact_name = #{contactName,jdbcType=VARCHAR},
      contact_phone = #{contactPhone,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
        update user_contacts
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="userId =case id" suffix="end,">
                <foreach collection="list" index="index" item="item" separator=" ">
                    when #{item.id} then #{item.userId}
                </foreach>
            </trim>
            <trim prefix="userName =case id" suffix="end,">
                <foreach collection="list" index="index" item="item" separator=" ">
                    when #{item.id} then #{item.userName}
                </foreach>
            </trim>
            <trim prefix="contactName =case id" suffix="end,">
                <foreach collection="list" index="index" item="item" separator=" ">
                    when #{item.id} then #{item.contactName}
                </foreach>
            </trim>
            <trim prefix="contactPhone =case id" suffix="end,">
                <foreach collection="list" index="index" item="item" separator=" ">
                    when #{item.id} then #{item.contactPhone}
                </foreach>
            </trim>
            <trim prefix="createTime =case id" suffix="end,">
                <foreach collection="list" index="index" item="item" separator=" ">
                    when #{item.id} then #{item.createTime}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
            #{item.id}
        </foreach>
    </update>
    <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
        update user_contacts
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="userId =case id" suffix="end,">
                <foreach collection="list" index="index" item="item" separator=" ">
                    <if test="item.userId != null ">
                        when #{item.id} then #{item.userId}
                    </if>
                    <if test="item.userId == null ">
                        when #{item.id} then user_contacts.user_id
                    </if>
                </foreach>
            </trim>
            <trim prefix="userName =case id" suffix="end,">
                <foreach collection="list" index="index" item="item" separator=" ">
                    <if test="item.userName != null ">
                        when #{item.id} then #{item.userName}
                    </if>
                    <if test="item.userName == null ">
                        when #{item.id} then user_contacts.user_name
                    </if>
                </foreach>
            </trim>
            <trim prefix="contactName =case id" suffix="end,">
                <foreach collection="list" index="index" item="item" separator=" ">
                    <if test="item.contactName != null ">
                        when #{item.id} then #{item.contactName}
                    </if>
                    <if test="item.contactName == null ">
                        when #{item.id} then user_contacts.contact_name
                    </if>
                </foreach>
            </trim>
            <trim prefix="contactPhone =case id" suffix="end,">
                <foreach collection="list" index="index" item="item" separator=" ">
                    <if test="item.contactPhone != null ">
                        when #{item.id} then #{item.contactPhone}
                    </if>
                    <if test="item.contactPhone == null ">
                        when #{item.id} then user_contacts.contact_phone
                    </if>
                </foreach>
            </trim>
            <trim prefix="createTime =case id" suffix="end,">
                <foreach collection="list" index="index" item="item" separator=" ">
                    <if test="item.createTime != null ">
                        when #{item.id} then #{item.createTime}
                    </if>
                    <if test="item.createTime == null ">
                        when #{item.id} then user_contacts.create_time
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
            #{item.id}
        </foreach>
    </update>

    <select id="findContatsByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_contacts where user_id=#{userId}
    </select>

    <select id="selectUserContacts" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_contacts
        <where>
            <if test="userId != null">
                user_id = #{userId}
            </if>
            <if test="contactName != null">
                and contact_name = #{contactName}
            </if>
            <if test="userName != null">
                and user_name = #{userName}
            </if>
            <if test="contactPhone != null">
                and contact_phone like concat('%',#{contactPhone},'%')
            </if>
        </where>
    </select>

    <delete id="deleteByUserId" parameterType="java.lang.Integer">
    delete from user_contacts
    where user_id = #{userId}
  </delete>

    <select id="countContactsPhone" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    SELECT COUNT(user_id) FROM user_contacts WHERE user_id=#{userId} and   replace(contact_phone,' ','') REGEXP "[1][0-9]{10}"
     and  (LENGTH(replace(contact_phone,' ','')) = 11 or LENGTH(replace(contact_phone,' ','')) = 13)
  </select>

    <select id="selectContactNameLength" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    SELECT COUNT(user_id) FROM user_contacts WHERE user_id=#{userId} and   replace(contact_phone,' ','') REGEXP "[1][0-9]{10}" and CHAR_LENGTH(contact_name) >4
  </select>

    <select id="findAllContacts" resultType="com.summer.dao.entity.UserContactsUpdate">
        select id id, user_name userName,contact_name contactName,contact_phone  contactPhone from user_contacts
    </select>

</mapper>