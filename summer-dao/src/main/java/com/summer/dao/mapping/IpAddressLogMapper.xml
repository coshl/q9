<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.summer.dao.mapper.IpAddressLogDAO">
    <resultMap id="BaseResultMap" type="com.summer.dao.entity.IpAddressLog">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="ip" jdbcType="VARCHAR" property="ip"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="channel_code" jdbcType="VARCHAR" property="channelCode"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, ip, url, channel_code, create_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ip_address_log
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ip_address_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.summer.dao.entity.IpAddressLog">
    insert into ip_address_log (id, ip, url, channel_code, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{ip,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{channelCode,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.summer.dao.entity.IpAddressLog">
        insert into ip_address_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="ip != null">
                ip,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="channelCode != null">
                channel_code,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="channelCode != null">
                #{channelCode,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <insert id="insertBatch" parameterType="java.util.List">
        insert into ip_address_log (id, ip, url,
        channel_code, create_time)
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (#{item.id,jdbcType=BIGINT}, #{item.ip,jdbcType=VARCHAR}, #{item.url,jdbcType=VARCHAR},
            #{item.channelCode,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>
    <insert id="insertBatchSelective" parameterType="java.util.List">
        insert into ip_address_log
        (id, ip, url, channel_code, create_time)
        values
        <foreach collection="list" index="index" item="item" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="item.id != null">
                    #{item.id,jdbcType=BIGINT},
                </if>
                <if test="item.id == null">
                    NULL,
                </if>
                <if test="item.ip != null">
                    #{item.ip,jdbcType=VARCHAR},
                </if>
                <if test="item.ip == null">
                    NULL,
                </if>
                <if test="item.url != null">
                    #{item.url,jdbcType=VARCHAR},
                </if>
                <if test="item.url == null">
                    NULL,
                </if>
                <if test="item.channelCode != null">
                    #{item.channelCode,jdbcType=VARCHAR},
                </if>
                <if test="item.channelCode == null">
                    NULL,
                </if>
                <if test="item.createTime != null">
                    #{item.createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="item.createTime == null">
                    NULL,
                </if>
            </trim>
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.summer.dao.entity.IpAddressLog">
        update ip_address_log
        <set>
            <if test="ip != null">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="channelCode != null">
                channel_code = #{channelCode,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.summer.dao.entity.IpAddressLog">
    update ip_address_log
    set ip = #{ip,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      channel_code = #{channelCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
        update ip_address_log
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="ip =case id" suffix="end,">
                <foreach collection="list" index="index" item="item" separator=" ">
                    when #{item.id} then #{item.ip}
                </foreach>
            </trim>
            <trim prefix="url =case id" suffix="end,">
                <foreach collection="list" index="index" item="item" separator=" ">
                    when #{item.id} then #{item.url}
                </foreach>
            </trim>
            <trim prefix="channelCode =case id" suffix="end,">
                <foreach collection="list" index="index" item="item" separator=" ">
                    when #{item.id} then #{item.channelCode}
                </foreach>
            </trim>
            <trim prefix="createTime =case id" suffix="end,">
                <foreach collection="list" index="index" item="item" separator=" ">
                    when #{item.id} then #{item.createTime}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
            #{item.id}
        </foreach>
    </update>
    <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
        update ip_address_log
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="ip =case id" suffix="end,">
                <foreach collection="list" index="index" item="item" separator=" ">
                    <if test="item.ip != null ">
                        when #{item.id} then #{item.ip}
                    </if>
                    <if test="item.ip == null ">
                        when #{item.id} then ip_address_log.ip
                    </if>
                </foreach>
            </trim>
            <trim prefix="url =case id" suffix="end,">
                <foreach collection="list" index="index" item="item" separator=" ">
                    <if test="item.url != null ">
                        when #{item.id} then #{item.url}
                    </if>
                    <if test="item.url == null ">
                        when #{item.id} then ip_address_log.url
                    </if>
                </foreach>
            </trim>
            <trim prefix="channelCode =case id" suffix="end,">
                <foreach collection="list" index="index" item="item" separator=" ">
                    <if test="item.channelCode != null ">
                        when #{item.id} then #{item.channelCode}
                    </if>
                    <if test="item.channelCode == null ">
                        when #{item.id} then ip_address_log.channel_code
                    </if>
                </foreach>
            </trim>
            <trim prefix="createTime =case id" suffix="end,">
                <foreach collection="list" index="index" item="item" separator=" ">
                    <if test="item.createTime != null ">
                        when #{item.id} then #{item.createTime}
                    </if>
                    <if test="item.createTime == null ">
                        when #{item.id} then ip_address_log.create_time
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
            #{item.id}
        </foreach>
    </update>

    <select id="getPvUv" parameterType="com.summer.dao.entity.IpAddressLogQuery"
            resultType="com.summer.dao.entity.dailystatics.DailyStatisticsChannelProduct">
    SELECT count(*) as pv,
    count(DISTINCT(ip)) as uv
    from ip_address_log
    where  <![CDATA[DATE_FORMAT(create_time,'%Y-%m-%d')= #{createTime}]]>
    and channel_code = #{channelCode}
    and url = #{url}
    and ip is not null

  </select>
    <select id="getAppPvUv" parameterType="com.summer.dao.entity.IpAddressLogQuery"
            resultType="com.summer.dao.entity.dailystatics.DailyStatisticsChannelProduct">
      SELECT count(*) as pv,
    count(DISTINCT(ip)) as uv
    from ip_address_log
    where  <![CDATA[DATE_FORMAT(create_time,'%Y-%m-%d')= #{createTime}]]>
    and url = #{url}
    and ip is not null
  </select>

</mapper>