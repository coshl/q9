<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.summer.dao.mapper.UserAfuDataDAO">
    <resultMap id="BaseResultMap" type="com.summer.dao.entity.UserAfuData">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="pid" jdbcType="BIGINT" property="pid"/>
        <result column="uid" jdbcType="BIGINT" property="uid"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.summer.dao.entity.UserAfuDataWithBLOBs">
        <result column="af_report_data" property="afReportData"/>
        <result column="af_score_data" property="afScoreData"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, pid, uid, create_time, update_time
  </sql>
    <sql id="Blob_Column_List">
      CONVERT(UNCOMPRESS(af_report_data) USING utf8) af_report_data,
      CONVERT(UNCOMPRESS(af_score_data) USING utf8) af_score_data
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from user_afu_data
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_afu_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.summer.dao.entity.UserAfuDataWithBLOBs">
    insert into user_afu_data (id, pid, uid, create_time, 
      update_time, af_report_data, af_score_data
      )
    values (#{id,jdbcType=INTEGER}, #{pid,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, COMPRESS(#{afReportData}), COMPRESS(#{afScoreData})
      )
  </insert>
    <insert id="insertSelective" parameterType="com.summer.dao.entity.UserAfuDataWithBLOBs">
        insert into user_afu_data
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="pid != null">
                pid,
            </if>
            <if test="uid != null">
                uid,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="afReportData != null">
                af_report_data,
            </if>
            <if test="afScoreData != null">
                af_score_data,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=BIGINT},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="afReportData != null">
                COMPRESS(#{afReportData}),
            </if>
            <if test="afScoreData != null">
                COMPRESS(#{afScoreData}),
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.summer.dao.entity.UserAfuDataWithBLOBs">
        update user_afu_data
        <set>
            <if test="pid != null">
                pid = #{pid,jdbcType=BIGINT},
            </if>
            <if test="uid != null">
                uid = #{uid,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="afReportData != null">
                af_report_data = COMPRESS(#{afReportData}),
            </if>
            <if test="afScoreData != null">
                af_score_data = COMPRESS(#{afScoreData}),
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.summer.dao.entity.UserAfuDataWithBLOBs">
    update user_afu_data
    set pid = #{pid,jdbcType=BIGINT},
      uid = #{uid,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      af_report_data = COMPRESS(#{afReportData}),
      af_score_data = COMPRESS(#{afScoreData})
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.summer.dao.entity.UserAfuData">
    update user_afu_data
    set pid = #{pid,jdbcType=BIGINT},
      uid = #{uid,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="findParams" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>,
        <include refid="Blob_Column_List"/>
        from user_afu_data
        <where>
            <if test="uid != null">
                and uid = #{uid,jdbcType=BIGINT}
            </if>
            <if test="pid != null and pid != ''">
                and pid = #{pid,jdbcType=BIGINT}
            </if>
        </where>
        order by id desc limit 1
    </select>
</mapper>