<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.summer.dao.mapper.PlatformRoleMapper">
    <resultMap id="BaseResultMap" type="com.summer.dao.entity.PlatformRole">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="role_super_id" property="roleSuperId" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, code, description, role_super_id,status, create_date, modify_date
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from platform_role
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from platform_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.summer.dao.entity.PlatformRole">
        insert into platform_role (id, name, code,
        description, role_super_id,status, create_date,
        modify_date)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR},
        #{description,jdbcType=VARCHAR}, #{roleSuperId,jdbcType=INTEGER},#{status,jdbcType=INTEGER},
        #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP})
        <selectKey keyProperty="id" order="AFTER" resultType="int">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>
    <insert id="insertSelective" parameterType="com.summer.dao.entity.PlatformRole">
        insert into platform_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="roleSuperId != null">
                role_super_id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="modifyDate != null">
                modify_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="roleSuperId != null">
                #{roleSuperId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyDate != null">
                #{modifyDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.summer.dao.entity.PlatformRole">
        update platform_role
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="code == ''">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="roleSuperId != null">
                role_super_id = #{roleSuperId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyDate != null">
                modify_date = #{modifyDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.summer.dao.entity.PlatformRole">
    update platform_role
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      role_super_id = #{roleSuperId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <!--角色列表-->
    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from platform_role
        WHERE status in(0,1)
        ORDER BY id
    </select>
    <!--通过角色名称获得角色id-->
    <select id="selectByRoleName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from platform_role
        WHERE name=#{name,jdbcType=VARCHAR}
        ORDER BY id
    </select>
    <!-- 角色管理列表-->
    <select id="findParams" parameterType="java.util.Map" resultType="com.summer.pojo.vo.PlatformUserRoleVo">
        select
        pr.id, pr.code ip, pr.name as roleName,pr.status as status,pr.create_date as createTime,prs.name as
        userSuperName,pr.description as description
        from platform_role pr
        LEFT JOIN platform_role prs on pr.role_super_id=prs.id
        <where>
            <if test="status != null ">
                pr.status = #{status}
            </if>
            <if test="roleName !=null ">
                and pr.id = #{roleName}
            </if>
            and pr.status in (0,1)
        </where>
        order by pr.id
    </select>
</mapper>